<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/tx             
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.2.xsd">

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cnmts.**.dao" />
	</bean>
	<context:component-scan base-package="com.cnmts.**.service" />
	<context:component-scan base-package="com.cnmts.**.controller" />
	<context:component-scan base-package="com.cnmts.**.schedule" />
	<context:component-scan base-package="com.cnmts.**.listener" />
	<context:annotation-config />
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
<!-- 		<property name="filters" value="stat" /> -->
		<property name="maxActive" value="400" />
		<property name="initialSize" value="5" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="100" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="connectionInitSqls" value="set names utf8mb4;"/>
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="proxyFilters">
			<list>
				<ref bean="log-filter"/>
				<ref bean="stat-filter"/>
			</list>
		</property>
	</bean>
	
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="mergeSql" value="true" />
		<property name="slowSqlMillis" value="3000" />
		<property name="logSlowSql" value="true" />
	</bean> 
	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<property name="statementLogEnabled" value="false" />
	
	
		<property name="connectionConnectBeforeLogEnabled" value="false" />
	
		<property name="statementExecutableSqlLogEnable" value="true" />
		<property name="statementCreateAfterLogEnabled" value="false" />
		<property name="statementPrepareAfterLogEnabled" value="false" />
		<property name="statementPrepareCallAfterLogEnabled" value="false" />
		<property name="statementExecuteAfterLogEnabled" value="false" />
		
		<property name="statementExecuteQueryAfterLogEnabled" value="false" />
		<property name="statementExecuteUpdateAfterLogEnabled" value="false" />
		<property name="statementExecuteBatchAfterLogEnabled" value="false" />
		<property name="statementCloseAfterLogEnabled" value="false" />
		<property name="statementParameterClearLogEnable" value="false" />
		<property name="statementParameterSetLogEnabled" value="false" />
		
		<property name="resultSetNextAfterLogEnabled" value="false" />
		<property name="resultSetOpenAfterLogEnabled" value="false" />
		<property name="resultSetCloseAfterLogEnabled" value="false" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis.xml" />
	</bean>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json; charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
						<value>text/plain;charset=UTF-8</value>
						<value>application/x-www-form-urlencoded; charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json; charset=UTF-8</value>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/user/**" />
			<mvc:mapping path="/file/**" />
			<mvc:exclude-mapping path="/user/userLogin"/>
			<mvc:exclude-mapping path="/user/userLogout"/>
			<bean class="com.cnmts.common.interceptor.RestLoginInterceptor">
				<property name="userService" ref="userService"></property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<mvc:resources location="/upload/" mapping="/upload/**" cache-period="31536000" order=""/>
	<mvc:resources location="/preview/" mapping="/preview/**" cache-period="31536000"/>
	
	<bean id="handlerExceptionResolver" class="com.cnmts.common.handler.ExceptionHandler"></bean>

	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.web.servlet.PageNotFound">errors/404pageNotFound</prop>
				<prop key="org.springframework.web.HttpRequestMethodNotSupportedException">errors/404pageNotFound</prop>
				<prop key="java.lang.Exception">errors/error</prop>
				<prop key="java.lang.Throwable">errors/error</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="DEBUG"></property>
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
	<task:scheduler id="scheduler" pool-size="10" />  
    <task:executor id="executor" keep-alive="3600" pool-size="100-200"  queue-capacity="500" rejection-policy="CALLER_RUNS" /> 
    <task:annotation-driven executor="executor" scheduler="scheduler" />
    <mvc:cors>
        <mvc:mapping path="/**" allowed-origins="*" allow-credentials="true" max-age="1800" allowed-methods="GET,POST"/>
    </mvc:cors>
</beans>